#!/bin/sh

set -eu

uid_number=$(id -u)
gocryptfs_dir="/home/.gocryptfs/${uid_number}"

if [ ! -d "$gocryptfs_dir" ]; then
  # nothing to do
  exit 0
fi

json_data=$(cat)

response_status=$(printf %s "$json_data" | jq -r .response.status)

if [ "$response_status" != 'ok' ]; then
  echo 'Response status was not ok, failed' >&2
  exit 1
fi

login_uid=$(        printf %s "$json_data" | jq -r '.request["login[uid]"]')
login_password=$(   printf %s "$json_data" | jq -r '.request["login[password]"]')
user_new_password=$(printf %s "$json_data" | jq -r '.request["user[new_password]"]')

if [ -z "$login_uid" -o "$login_uid" = 'null' \
     -o -z "$login_password" -o "$login_password" = 'null' \
     -o -z "$user_new_password" -o "$user_new_password" = 'null' ]; then
  echo 'required data is missing, not doing anything' >&2
  exit 1
fi

if [ "$(id -nu)" != "$login_uid" ]; then
  echo 'login uid does not match the current user' >&2
  exit 1
fi

printf "%s\n%s\n%s\n" "$login_password" \
	              "$user_new_password" \
		      "$user_new_password" \
  | gocryptfs -passwd "$gocryptfs_dir"
