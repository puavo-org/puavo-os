#!/bin/sh

set -eu

# Mount Puavo partitions from local hard drive and use files created by
# puavo-register script.  Checks if LVM partitions /dev/mapper/puavo-home,
# /dev/mapper/puavo-state and /dev/mapper/puavo-tmp and mounts those as
# /home, /state or /tmp correspondingly.

puavo_mount_partition() {
  local puavo_partition puavo_mntpoint

  puavo_partition=$1
  puavo_mntpoint=$2

  if ! [ -b "/dev/mapper/${puavo_partition}" ]; then
    return 1
  fi

  # presume, if $puavo_mntpoint is already mounted, there is nothing to do
  if mountpoint -q "$puavo_mntpoint"; then
    return 0
  fi

  mkdir -p "$puavo_mntpoint"

  rotational_value=$(cat /sys/block/sda/queue/rotational 2>/dev/null || true)
  if [ "$rotational_value" = '0' ]; then
    mount_opts='-o discard,noatime'
  else
    mount_opts='-o noatime'
  fi

  if [ -e /images/forcefsck ]; then
    # FORCE fsck if /images/forcefsck exists
    if ! fsck -fpv "/dev/mapper/${puavo_partition}"; then
      fsck -fvy "/dev/mapper/${puavo_partition}" || true
    fi
  fi

  if mount $mount_opts "/dev/mapper/${puavo_partition}" "$puavo_mntpoint"; then
    return 0
  fi

  # fsck if mount failed (first try automatic, then -y)
  if ! fsck -pv "/dev/mapper/${puavo_partition}"; then
    fsck -vy "/dev/mapper/${puavo_partition}" || true
  fi

  if mount $mount_opts "/dev/mapper/${puavo_partition}" "$puavo_mntpoint"; then
    return 0
  fi

  # FORCE fsck if mount failed again (first try automatic, then -y)
  if ! fsck -fpv "/dev/mapper/${puavo_partition}"; then
    fsck -fvy "/dev/mapper/${puavo_partition}" || true
  fi

  mount $mount_opts "/dev/mapper/${puavo_partition}" "$puavo_mntpoint"
}

puavo_mounts=$(puavo-conf puavo.mounts.local)

status=0

have_puavo_mounts=false

for mountpoint in $puavo_mounts; do
  if [ "$mountpoint" = 'installimages' ]; then
    {
      vgchange -a y puavoinstaller \
        && puavo_mount_partition puavoinstaller-installimages /installimages
    } || status=1
    break
  else
    have_puavo_mounts=true
  fi
done

if $have_puavo_mounts; then
  if ! vgchange -a y puavo 2>/dev/null; then
    if [ "$puavo_mounts" = '!tmp' ]; then
      # with !tmp it is okay if we have failed vgchange
      # (this is optional for fatclients)
      exit 0
    fi
    echo 'could not attach the "puavo" volume group' >&2
    exit 1
  fi
fi

for mountpoint in $puavo_mounts; do
  case "$mountpoint" in
    home)   puavo_mount_partition puavo-home   /home   || status=1 ;;
    images) puavo_mount_partition puavo-images /images || status=1 ;;
    state)  puavo_mount_partition puavo-state  /state  || status=1 ;;
    tmp)
      { puavo_mount_partition puavo-tmp /tmp && chmod 1777 /tmp; } || status=1
      ;;
    !tmp)
      { puavo_mount_partition puavo-tmp /tmp && chmod 1777 /tmp; } || true
      ;;
    *)
      echo "unsupported mountpoint $mountpoint" >&2 || status=1
      ;;
  esac
done

rm -f /images/forcefsck

exit $status
