#!/usr/bin/tclsh

# we do not use systemctl here, because we want this script to be fast

set services {
  { atop {
      /etc/systemd/system/multi-user.target.wants/atop.service
        -> /lib/systemd/system/atop.service
      /etc/systemd/system/multi-user.target.wants/atopacct.service
        -> /lib/systemd/system/atopacct.service
      /etc/rc2.d/S01atop -> /etc/init.d/atop
      /etc/rc3.d/S01atop -> /etc/init.d/atop
      /etc/rc4.d/S01atop -> /etc/init.d/atop
      /etc/rc5.d/S01atop -> /etc/init.d/atop
      /etc/rc2.d/S01atopacct -> /etc/init.d/atopacct
      /etc/rc3.d/S01atopacct -> /etc/init.d/atopacct
      /etc/rc4.d/S01atopacct -> /etc/init.d/atopacct
      /etc/rc5.d/S01atopacct -> /etc/init.d/atopacct
    }}

  { autofs {
      /etc/systemd/system/multi-user.target.wants/autofs.service
        -> /usr/lib/systemd/system/autofs.service
    }}

  { avahi-daemon {
      /etc/systemd/system/dbus-org.freedesktop.Avahi.service
        -> /lib/systemd/system/avahi-daemon.service
      /etc/systemd/system/multi-user.target.wants/avahi-daemon.service
        -> /lib/systemd/system/avahi-daemon.service
      /etc/systemd/system/sockets.target.wants/avahi-daemon.socket
        -> /lib/systemd/system/avahi-daemon.socket
    }}

  { collectd {
      /etc/systemd/system/multi-user.target.wants/collectd.service
        -> /lib/systemd/system/collectd.service
      /etc/rc2.d/S01collectd -> /etc/init.d/collectd
      /etc/rc3.d/S01collectd -> /etc/init.d/collectd
      /etc/rc4.d/S01collectd -> /etc/init.d/collectd
      /etc/rc5.d/S01collectd -> /etc/init.d/collectd
    }}

  { cups-browsed {
      /etc/systemd/system/multi-user.target.wants/cups-browsed.service
        -> /lib/systemd/system/cups-browsed.service
    }}

  { cups-watchdog {
      /etc/systemd/system/multi-user.target.wants/cups-watchdog.service
        -> /etc/systemd/system/cups-watchdog.service
    }}

  { dnsmasq {
      /etc/systemd/system/multi-user.target.wants/dnsmasq.service
        -> /lib/systemd/system/dnsmasq.service
    }}

  { epoptes {
      /etc/systemd/system/multi-user.target.wants/epoptes.service
        -> /lib/systemd/system/epoptes.service
    }}

  { epoptes-client {
      /etc/systemd/system/multi-user.target.wants/epoptes-client.service
        -> /lib/systemd/system/epoptes-client.service
    }}

  { freeradius {
      /etc/systemd/system/multi-user.target.wants/freeradius.service
        -> /lib/systemd/system/freeradius.service
      /etc/rc2.d/S01freeradius -> /etc/init.d/freeradius
      /etc/rc3.d/S01freeradius -> /etc/init.d/freeradius
      /etc/rc4.d/S01freeradius -> /etc/init.d/freeradius
      /etc/rc5.d/S01freeradius -> /etc/init.d/freeradius
    }}

  { gpm {
      /etc/rc2.d/S01gpm -> /etc/init.d/gpm
      /etc/rc3.d/S01gpm -> /etc/init.d/gpm
      /etc/rc4.d/S01gpm -> /etc/init.d/gpm
      /etc/rc5.d/S01gpm -> /etc/init.d/gpm
    }}

  { hooktftp {
      /etc/rc2.d/S01hooktftp -> /etc/init.d/hooktftp
      /etc/rc3.d/S01hooktftp -> /etc/init.d/hooktftp
      /etc/rc4.d/S01hooktftp -> /etc/init.d/hooktftp
      /etc/rc5.d/S01hooktftp -> /etc/init.d/hooktftp
    }}

  { incron {
      /etc/systemd/system/multi-user.target.wants/incron.service
        -> /lib/systemd/system/incron.service
    }}

  { inetd {
      /etc/systemd/system/multi-user.target.wants/inetd.service
        -> /lib/systemd/system/inetd.service
      /etc/rc2.d/S01openbsd-inetd -> /etc/init.d/openbsd-inetd
      /etc/rc3.d/S01openbsd-inetd -> /etc/init.d/openbsd-inetd
      /etc/rc4.d/S01openbsd-inetd -> /etc/init.d/openbsd-inetd
      /etc/rc5.d/S01openbsd-inetd -> /etc/init.d/openbsd-inetd
    }}

  { isc-dhcp-server {
      /etc/rc2.d/S01isc-dhcp-server -> /etc/init.d/isc-dhcp-server
      /etc/rc3.d/S01isc-dhcp-server -> /etc/init.d/isc-dhcp-server
      /etc/rc4.d/S01isc-dhcp-server -> /etc/init.d/isc-dhcp-server
      /etc/rc5.d/S01isc-dhcp-server -> /etc/init.d/isc-dhcp-server
    }}

  { krb5-kdc {
      /etc/systemd/system/multi-user.target.wants/krb5-kdc.service
        -> /lib/systemd/system/krb5-kdc.service
    }}

  { libvirtd {
      /etc/systemd/system/multi-user.target.wants/libvirtd.service
        -> /lib/systemd/system/libvirtd.service
      /etc/systemd/system/multi-user.target.wants/libvirt-guests.service
        -> /lib/systemd/system/libvirt-guests.service
      /etc/systemd/system/sockets.target.wants/virtlockd.socket
        -> /lib/systemd/system/virtlockd.socket
      /etc/systemd/system/sockets.target.wants/virtlogd.socket
        -> /lib/systemd/system/virtlogd.socket
    }}

  { ModemManager {
      /etc/systemd/system/dbus-org.freedesktop.ModemManager1.service
        -> /lib/systemd/system/ModemManager.service
      /etc/systemd/system/multi-user.target.wants/ModemManager.service
        -> /lib/systemd/system/ModemManager.service
    }}

  { munin-node {
      /etc/systemd/system/multi-user.target.wants/munin-node.service
        -> /lib/systemd/system/munin-node.service
    }}

  { nagios-nrpe-server {
      /etc/systemd/system/multi-user.target.wants/nagios-nrpe-server.service
        -> /lib/systemd/system/nagios-nrpe-server.service
    }}

  { named {
      /etc/systemd/system/multi-user.target.wants/named.service
        -> /lib/systemd/system/named.service
      /etc/rc2.d/S01named -> /etc/init.d/named
      /etc/rc3.d/S01named -> /etc/init.d/named
      /etc/rc4.d/S01named -> /etc/init.d/named
      /etc/rc5.d/S01named -> /etc/init.d/named
    }}

  { nbd-server {
      /etc/rc2.d/S01nbd-server -> /etc/init.d/nbd-server
      /etc/rc3.d/S01nbd-server -> /etc/init.d/nbd-server
      /etc/rc4.d/S01nbd-server -> /etc/init.d/nbd-server
      /etc/rc5.d/S01nbd-server -> /etc/init.d/nbd-server
    }}

  { NetworkManager {
      /etc/systemd/system/dbus-org.freedesktop.nm-dispatcher.service
        -> /lib/systemd/system/NetworkManager-dispatcher.service
      /etc/systemd/system/multi-user.target.wants/NetworkManager.service
        -> /lib/systemd/system/NetworkManager.service
      /etc/systemd/system/network-online.target.wants/NetworkManager-wait-online.service
        -> /lib/systemd/system/NetworkManager-wait-online.service
    }}

  { nfs-server {
      /etc/systemd/system/multi-user.target.wants/nfs-server.service
        -> /lib/systemd/system/nfs-server.service
    }}

  { nginx {
      /etc/systemd/system/multi-user.target.wants/nginx.service
        -> /lib/systemd/system/nginx.service
    }}

  { nmbd {
      /etc/systemd/system/multi-user.target.wants/nmbd.service
        -> /lib/systemd/system/nmbd.service
    }}

  { nscd {
      /etc/systemd/system/multi-user.target.wants/nscd.service
        -> /lib/systemd/system/nscd.service
    }}

  { nslcd {
      /etc/rc2.d/S01nslcd -> /etc/init.d/nslcd
      /etc/rc3.d/S01nslcd -> /etc/init.d/nslcd
      /etc/rc4.d/S01nslcd -> /etc/init.d/nslcd
      /etc/rc5.d/S01nslcd -> /etc/init.d/nslcd
    }}

  { nvidia-persistenced {
      /etc/rc2.d/S01nvidia-persistenced -> /etc/init.d/nvidia-persistenced
      /etc/rc3.d/S01nvidia-persistenced -> /etc/init.d/nvidia-persistenced
      /etc/rc4.d/S01nvidia-persistenced -> /etc/init.d/nvidia-persistenced
      /etc/rc5.d/S01nvidia-persistenced -> /etc/init.d/nvidia-persistenced
      /etc/systemd/system/multi-user.target.wants/nvidia-persistenced.service
        -> /lib/systemd/system/nvidia-persistenced.service
    }}

  { puavo-autopoweroff {
      /etc/systemd/system/multi-user.target.wants/puavo-autopoweroff.service
        -> /lib/systemd/system/puavo-autopoweroff.service
    }}

  { puavo-darkdm {
      /etc/systemd/system/multi-user.target.wants/puavo-darkdm.service
        -> /lib/systemd/system/puavo-darkdm.service
    }}

  { puavo-image-torrent-updated {
      /etc/systemd/system/multi-user.target.wants/puavo-image-torrent-updated.service
        -> /lib/systemd/system/puavo-image-torrent-updated.service
      /etc/systemd/system/sockets.target.wants/puavo-image-torrent-updated.socket
        -> /lib/systemd/system/puavo-image-torrent-updated.socket
    }}

  { puavo-rest {
      /etc/systemd/system/multi-user.target.wants/puavo-rest.service
        -> /lib/systemd/system/puavo-rest.service
    }}

  { puavo-samba-sync {
      /etc/systemd/system/multi-user.target.wants/puavo-samba-sync.service
        -> /etc/systemd/system/puavo-samba-sync.service
    }}

  { puavo-sharedir-manager {
      /etc/systemd/system/multi-user.target.wants/puavo-sharedir-manager.service
        -> /lib/systemd/system/puavo-sharedir-manager.service
    }}

  { puavo-veyon {
      /etc/systemd/system/multi-user.target.wants/puavo-veyon.service
        -> /lib/systemd/system/puavo-veyon.service
    }}

  { puavo-vpn-client-dnsmasq {
      /etc/systemd/system/multi-user.target.wants/puavo-vpn-client-dnsmasq.service
        -> /lib/systemd/system/puavo-vpn-client-dnsmasq.service
    }}

  { puavo-vpn-client-openvpn {
      /etc/systemd/system/multi-user.target.wants/puavo-vpn-client-openvpn.service
        -> /lib/systemd/system/puavo-vpn-client-openvpn.service
    }}

  { puavo-wlanap {
      /etc/systemd/system/multi-user.target.wants/puavo-wlanap.service
        -> /lib/systemd/system/puavo-wlanap.service
    }}

  { puavo-wlancontroller {
      /etc/systemd/system/multi-user.target.wants/puavo-wlancontroller.service
        -> /lib/systemd/system/puavo-wlancontroller.service
    }}

  { puavo-wlangw {
      /etc/rc2.d/S01puavo-wlangw -> /etc/init.d/puavo-wlangw
      /etc/rc3.d/S01puavo-wlangw -> /etc/init.d/puavo-wlangw
      /etc/rc4.d/S01puavo-wlangw -> /etc/init.d/puavo-wlangw
      /etc/rc5.d/S01puavo-wlangw -> /etc/init.d/puavo-wlangw
    }}

  { redis-server {
      /etc/systemd/system/multi-user.target.wants/redis-server.service
        -> /lib/systemd/system/redis-server.service
    }}

  { rpc-gssd {
      /etc/systemd/system/multi-user.target.wants/rpc-gssd.service
        -> /lib/systemd/system/rpc-gssd.service
    }}

  { samba-ad-dc {
      /etc/systemd/system/multi-user.target.wants/samba-ad-dc.service
        -> /lib/systemd/system/samba-ad-dc.service
      /etc/rc2.d/S01samba-ad-dc -> /etc/init.d/samba-ad-dc
      /etc/rc3.d/S01samba-ad-dc -> /etc/init.d/samba-ad-dc
      /etc/rc4.d/S01samba-ad-dc -> /etc/init.d/samba-ad-dc
      /etc/rc5.d/S01samba-ad-dc -> /etc/init.d/samba-ad-dc
    }}

  { shorewall {
      /etc/systemd/system/basic.target.wants/shorewall.service
        -> /lib/systemd/system/shorewall.service
    }}

  { slapd {
     /etc/systemd/system/multi-user.target.wants/slapd.service
       -> /etc/systemd/system/slapd.service
    }}

  { smbd {
      /etc/systemd/system/multi-user.target.wants/smbd.service
        -> /lib/systemd/system/smbd.service
    }}

  { tlp {
      /etc/systemd/system/multi-user.target.wants/tlp.service
        -> /lib/systemd/system/tlp.service
    }}

  { ulogd2 {
      /etc/systemd/system/multi-user.target.wants/ulogd2.service
        -> /lib/systemd/system/ulogd2.service
      /etc/systemd/system/ulogd.service
        -> /lib/systemd/system/ulogd2.service
    }}

  { veyon {
      /etc/systemd/system/multi-user.target.wants/veyon.service
        -> /lib/systemd/system/veyon.service
    }}

  { winbind {
      /etc/systemd/system/multi-user.target.wants/winbind.service
        -> /usr/lib/systemd/system/winbind.service
    }}
}

proc set_service {service_name enabled linkpaths} {
  foreach {source -> target} $linkpaths {
    if {$enabled} {
      set link_dir [file dirname $source]
      if {![file isdirectory $link_dir]} { file mkdir $link_dir }
      file delete $source
      file link -symbolic $source $target
    } else {
      file delete $source
    }
  }
}

set status 0

set disabled_services [list]
set enabled_services  [list]

foreach service_def $services {
  foreach {service service_link_defs} $service_def {
    set puavo_conf_var "puavo.service.${service}.enabled"
    set res [ catch { exec -ignorestderr puavo-conf $puavo_conf_var } \
                           puavo_conf_res]
    if {$res} {
      puts stderr "No puavo-conf setting for $puavo_conf_var: $puavo_conf_res"
      set status 1
      continue
    }
    set puavo_conf_value $puavo_conf_res

    # As an exception, do not run puavo-vpn-client-dnsmasq on netboot devices,
    # because that will mess up dns configuration (XXX perhaps we need a
    # a special profile for laptops which are booted from network, that
    # override otherwise normal laptop behaviour).
    if {$service == "puavo-vpn-client-dnsmasq"
	  && [file exists /run/puavo/nbd-server]} {
      set puavo_conf_value false
    }

    if {$puavo_conf_value == "true"} {
      if {[catch { set_service $service true $service_link_defs } errmsg]} {
        puts stderr "Could not enable $service: $errmsg"
	set status 1
	continue
      }
      lappend enabled_services $service
    } else {
      if {[catch { set_service $service false $service_link_defs } errmsg]} {
        puts stderr "Could not disable $service: $errmsg"
	set status 1
	continue
      }
      lappend disabled_services $service
    }
  }
}

puts -nonewline "((( disabled services (by puavo-conf): $disabled_services ))) ... "
puts -nonewline "((( enabled services (by puavo-conf): $enabled_services ))) ... "

exit $status
