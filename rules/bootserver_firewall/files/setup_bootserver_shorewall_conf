#!/bin/sh

set -eu

. /etc/puavo-conf/scripts/.lib

target_dir='/etc/shorewall.rofs'

fw_logging_policy=$(puavo-conf puavo.admin.logging.firewall)

iface_no_num() { echo "$1" | sed -E 's/[0-9]+$//'; }

get_dhcp_interfaces() {
  all_interfaces=$(awk '$1 == "iface" { print $2 }' /etc/network/interfaces \
                                                    /etc/network/interfaces.d/*)

  puavo_dhcpd_interfaces=$(puavo-conf puavo.networking.ddns.dhcpd_interfaces)
  for if_filter in $(echo "$puavo_dhcpd_interfaces" | tr , ' '); do
    for interf in $all_interfaces; do
      case "$interf" in
        $if_filter)
          echo "$interf"
          ;;
      esac
    done
  done
}

dhcpd_interfaces=$(get_dhcp_interfaces)

# -- interfaces
cat <<EOF > "${target_dir}/interfaces.tmp"
#ZONE	INTERFACE	BROADCAST	OPTIONS
inet	inet0		detect		dhcp,tcpflags,nosmurfs,bridge
$(for iface in $dhcpd_interfaces; do
    echo "$(iface_no_num "$iface")	${iface}	        detect		dhcp,tcpflags,nosmurfs,bridge"
  done)
ovpn	vpn0
EOF
mv "${target_dir}/interfaces.tmp" "${target_dir}/interfaces"

# -- masq
rm -f "${target_dir}/masq"

# -- params
case "$fw_logging_policy" in
  outgoing,rejected)
    cat <<EOF > "${target_dir}/params.tmp"
PUAVO_DEFAULT_LOG_LEVEL=NFLOG
PUAVO_REJECT_LOG_LEVEL=NFLOG
EOF
    ;;
  '')
    cat <<EOF > "${target_dir}/params.tmp"
PUAVO_DEFAULT_LOG_LEVEL=info
PUAVO_REJECT_LOG_LEVEL=
EOF
    ;;
  *)
    echo "Unknown logging policy '${fw_logging_policy}'" >&2
    exit 1
    ;;
esac
mv "${target_dir}/params.tmp" "${target_dir}/params"

# -- policy
cat <<'EOF' > "${target_dir}/policy.tmp"
#SOURCE         DEST            POLICY          LOG LEVEL       LIMIT:BURST
inet            fw              REJECT          $PUAVO_REJECT_LOG_LEVEL
fw              all		ACCEPT
ltsp            inet            ACCEPT
ltsp            ovpn            ACCEPT
ltsp            fw              ACCEPT
ovpn            fw              ACCEPT
wlan            inet            ACCEPT
wlan            fw              ACCEPT
wlan            ovpn		REJECT          $PUAVO_REJECT_LOG_LEVEL
all             all             REJECT          $PUAVO_REJECT_LOG_LEVEL
EOF
mv "${target_dir}/policy.tmp" "${target_dir}/policy"

# -- rules
{
  cat <<EOF
#ACTION         SOURCE          	DEST            	PROTO   DEST    SOURCE          ORIGINAL        RATE            USER/   MARK    CONNLIMIT       TIME         HEADERS         SWITCH
#                                                       	PORT    PORT(S) 		DEST            LIMIT           GROUP
ACCEPT		any			any			icmp    8

# Maybe enable for some cases:
#ACCEPT		inet			fw			tcp	22
EOF

  if [ "$fw_logging_policy" = 'outgoing,rejected' ] ; then
    cat <<'EOF'

# for logging
$PUAVO_DEFAULT_LOG_LEVEL        ltsp    inet
$PUAVO_DEFAULT_LOG_LEVEL        wlan    inet
EOF
  fi
} > "${target_dir}/rules.tmp"
mv "${target_dir}/rules.tmp" "${target_dir}/rules"

# -- snat
cat <<EOF > "${target_dir}/snat.tmp"
#ACTION         SOURCE          DEST            PROTO   PORT   IPSEC  MARK   USER    SWITCH  ORIGDEST   PROBABILITY
$(for iface in $dhcpd_interfaces; do
    echo "MASQUERADE	$(iface_to_network_cidr "$iface")	inet0"
    echo "MASQUERADE	$(iface_to_network_cidr "$iface")	vpn0"
  done)
EOF
mv "${target_dir}/snat.tmp" "${target_dir}/snat"

# -- zones
cat <<EOF > "${target_dir}/zones.tmp"
#ZONE   TYPE    OPTIONS                 IN                      OUT
#                                       OPTIONS                 OPTIONS
fw      firewall
inet    ipv4		# Internet
ltsp    ipv4		# LTSP network(s)
ovpn    ipv4		# OpenVPN for server administration
wlan    ipv4		# WLAN network(s)
EOF
mv "${target_dir}/zones.tmp" "${target_dir}/zones"
